---
name: Manage GitHub Teams and Members

on:
  workflow_dispatch: # Allows the workflow to be manually triggered

permissions: read-all

jobs:
  manage-teams:
    runs-on: ubuntu-latest

    steps:
      - name: Create App token
        id: create_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.FSDH_TEAM_ADMIN_APP_ID }}
          private-key: ${{ secrets.FSDH_TEAM_ADMIN_APP_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Manage Teams
        env:
          GH_TOKEN: ${{ steps.create_token.outputs.token }}
        run: |
          team_files=$(find ./.github/workflows/team-configs -name '*.json')
          existing_teams=$(curl -s -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/orgs/${{ github.repository_owner }}/teams" | jq -r '.[].slug')

          for team_slug in $existing_teams; do
            json_file=$(find ./.github/workflows/team-configs -name "${team_slug}.json")

            if [[ -z "$json_file" ]]; then
              echo "No JSON file found for team $team_slug. Deleting team..."
              curl -s -X DELETE -L \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer $GH_TOKEN" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                "https://api.github.com/orgs/${{ github.repository_owner }}/teams/${team_slug}"
            else
              team=$(cat "$json_file")
              TEAM_NAME=$(echo "$team" | jq -r '.name')
              TEAM_DESCRIPTION=$(echo "$team" | jq -r '.description // ""')
              TEAM_PRIVACY=$(echo "$team" | jq -r '.privacy // "closed"')
              TEAM_NOTIFICATION=$(echo "$team" | jq -r '.notification_setting // "notifications_enabled"')

              echo "Updating team $TEAM_NAME..."
              curl -s -X PATCH -L \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer $GH_TOKEN" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                -d "{\"name\":\"${TEAM_NAME}\",\"description\":\"${TEAM_DESCRIPTION}\",\"privacy\":\"${TEAM_PRIVACY}\",\"notification_setting\":\"${TEAM_NOTIFICATION}\"}" \
                "https://api.github.com/orgs/${{ github.repository_owner }}/teams/${team_slug}"
            fi
          done

          echo "$team_files" | tr ' ' '\n' | while read -r team_file; do
            team=$(cat "$team_file")
            TEAM_NAME=$(echo "$team" | jq -r '.name')
            TEAM_SLUG=$(echo "$TEAM_NAME" | tr '[:upper:]' '[:lower:]' | tr ' ' '-')
            TEAM_DESCRIPTION=$(echo "$team" | jq -r '.description // ""')
            TEAM_PRIVACY=$(echo "$team" | jq -r '.privacy // "closed"')
            TEAM_PERMISSION=$(echo "$team" | jq -r '.permission // "push"')
            TEAM_NOTIFICATION=$(echo "$team" | jq -r '.notification_setting // "notifications_enabled"')

            if ! echo "$existing_teams" | grep -q "$TEAM_SLUG"; then
              echo "Creating team $TEAM_NAME..."
              curl -s -X POST -L \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer $GH_TOKEN" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                -d "{\"name\":\"${TEAM_NAME}\",\"description\":\"${TEAM_DESCRIPTION}\",\"privacy\":\"${TEAM_PRIVACY}\",\"permission\":\"${TEAM_PERMISSION}\",\"notification_setting\":\"${TEAM_NOTIFICATION}\"}" \
                "https://api.github.com/orgs/${{ github.repository_owner }}/teams"
            fi
          done

      - name: Manage Team Members
        env:
          GH_TOKEN: ${{ steps.create_token.outputs.token }}
        run: |
          team_files=$(find ./.github/workflows/team-configs -name '*.json')
          echo "$team_files" | tr ' ' '\n' | while read -r team_file; do
            team=$(cat "$team_file")
            TEAM_NAME=$(echo "$team" | jq -r '.name')
            TEAM_SLUG=$(echo "$TEAM_NAME" | tr '[:upper:]' '[:lower:]' | tr ' ' '-')
            TEAM_MEMBERS=$(echo "$team" | jq -c '.members')

            current_org_members=$(curl -s -L \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer $GH_TOKEN" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/orgs/${{ github.repository_owner }}/members" | jq -r '.[].login')

            echo "$TEAM_MEMBERS" | jq -c '.[]' | while read -r member; do
              username=$(echo "$member" | jq -r '.username')

              if echo "$current_org_members" | grep -qw "$username"; then
                TEAM_ID=$(curl -s -L \
                  -H "Accept: application/vnd.github+json" \
                  -H "Authorization: Bearer $GH_TOKEN" \
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  "https://api.github.com/orgs/${{ github.repository_owner }}/teams/${TEAM_SLUG}" | jq -r '.id')

                curl -s -X PUT -L \
                  -H "Accept: application/vnd.github+json" \
                  -H "Authorization: Bearer $GH_TOKEN" \
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  "https://api.github.com/teams/${TEAM_ID}/memberships/${username}"
              else
                echo "User $username is not a member of the organization. Skipping..."
              fi
            done

            for member in $current_members; do
              if echo "$current_org_members" | grep -qw "$member"; then
                is_member_in_json=$(echo "$TEAM_MEMBERS" | jq -e --arg member "$member" '.[] | select(.username == $member)' > /dev/null && echo true || echo false)
                
                if [ "$is_member_in_json" = false ]; then
                  echo "Removing member $member from team $TEAM_SLUG..."
                  curl -s -X DELETE -L \
                    -H "Accept: application/vnd.github+json" \
                    -H "Authorization: Bearer $GH_TOKEN" \
                    -H "X-GitHub-Api-Version: 2022-11-28" \
                    "https://api.github.com/orgs/${{ github.repository_owner }}/teams/${TEAM_SLUG}/memberships/$member"
                fi
              fi
            done
          done
